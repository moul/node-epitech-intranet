// Generated by CoffeeScript 1.4.0
(function() {
  var Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('../Model').Model;

  module.exports.User = (function(_super) {

    __extends(User, _super);

    function User() {
      this.router = __bind(this.router, this);

      this.index = __bind(this.index, this);

      this.setupRoutes = __bind(this.setupRoutes, this);
      return User.__super__.constructor.apply(this, arguments);
    }

    User.prototype.setupRoutes = function() {
      this.globalRoutes['user'] = this.router;
      return this.router.index = this.index;
    };

    User.prototype.index = function(fn) {
      return this.request("user/", fn);
    };

    User.prototype.router = function(fn) {
      var ue;
      if (fn == null) {
        fn = null;
      }
      switch (typeof fn) {
        case 'function':
          return this.index(fn);
        case 'string':
          ue = this.client.initModel(module.exports.UserEntity);
          ue.login = fn;
          return ue;
      }
    };

    return User;

  })(Model);

  module.exports.UserEntity = (function(_super) {

    __extends(UserEntity, _super);

    function UserEntity() {
      this.binome = __bind(this.binome, this);

      this.index = __bind(this.index, this);

      this.notification_alert = __bind(this.notification_alert, this);

      this.notification_message = __bind(this.notification_message, this);

      this.notification_coming = __bind(this.notification_coming, this);

      this.netsoul_getlog = __bind(this.netsoul_getlog, this);

      this.setupRoutes = __bind(this.setupRoutes, this);
      return UserEntity.__super__.constructor.apply(this, arguments);
    }

    UserEntity.prototype.setupRoutes = function() {
      this.netsoul = {
        getlog: this.netsoul_getlog
      };
      return this.notification = {
        coming: this.notification_coming,
        message: this.notification_message,
        alert: this.notification_alert
      };
    };

    UserEntity.prototype.netsoul_getlog = function(fn) {
      return this.request("user/" + this.login + "/netsoul/getlog/", fn);
    };

    UserEntity.prototype.notification_coming = function(fn) {
      return this.request("user/" + this.login + "/notification/coming/", fn);
    };

    UserEntity.prototype.notification_message = function(fn) {
      return this.request("user/" + this.login + "/notification/message/", fn);
    };

    UserEntity.prototype.notification_alert = function(fn) {
      return this.request("user/" + this.login + "/notification/alert/", fn);
    };

    UserEntity.prototype.index = function(fn) {
      return this.request("user/" + this.login + "/", fn);
    };

    UserEntity.prototype.binome = function(fn) {
      return this.request("user/" + this.login + "/binome", function(err, result) {
        if (err) {
          return fn(err, result);
        }
        return fn(err, result, result.binomes);
      });
    };

    return UserEntity;

  })(Model);

}).call(this);
