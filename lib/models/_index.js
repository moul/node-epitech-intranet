// Generated by CoffeeScript 1.4.0
(function() {
  var Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('../Model').Model;

  module.exports.Index = (function(_super) {

    __extends(Index, _super);

    function Index() {
      this.index = __bind(this.index, this);

      this.setupRoutes = __bind(this.setupRoutes, this);
      return Index.__super__.constructor.apply(this, arguments);
    }

    Index.prototype.setupRoutes = function() {
      return this.globalRoutes['index'] = this.index;
    };

    Index.prototype.index = function(fn) {
      return fn(false, 'index');
    };

    return Index;

  })(Model);

}).call(this);
